/* 全局样式重置 */
* {
    margin: 0;
    padding: 0;
    box-sizing: border-box;
}

/* 根元素样式 */
:root {
    --primary-color: #00f7ff;
    --secondary-color: #ff00c8;
    --accent-color: #ffea00;
    --text-color: #ffffff;
    --bg-gradient: linear-gradient(135deg, #0f0c29, #302b63, #24243e);
    /* 星空背景变量 */
    --star-color-1: #ffffff;
    --star-color-2: #00f7ff;
    --star-color-3: #ffea00;
    --star-size-small: 1px;
    --star-size-medium: 2px;
    --star-size-large: 3px;
}

/* 基础样式 */
body {
    font-family: 'Arial', sans-serif;
    background: var(--bg-gradient);
    min-height: 100vh;
    overflow-x: hidden;
    display: flex;
    align-items: center;
    justify-content: center;
    position: relative;
    margin: 0;
    padding: 0;
}

/* 主容器 */
.container {
    width: 100%;
    min-height: 100vh;
    display: flex;
    align-items: center;
    justify-content: center;
    position: relative;
    z-index: 1;
}

/* 星空背景容器 */
#stars-container {
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    z-index: 0;
    pointer-events: none;
}

/* 文字容器 */
.text-container {
    text-align: center;
    z-index: 2;
    padding: 2rem;
    max-width: 1200px;
}

/* 文字行样式 */
.text-line {
    color: var(--text-color);
    font-size: clamp(1.5rem, 8vw, 4rem);
    font-weight: 900;
    margin: 0.5rem 0;
    opacity: 0;
    transform: translateY(50px);
    letter-spacing: 2px;
    position: relative;
    display: block;
    width: 100%;
    white-space: nowrap;
    overflow: hidden;
    text-overflow: ellipsis;
    cursor: default;
    transition: all 0.3s ease;
    will-change: text-shadow, transform;
}

/* 增强的文字发光效果 */
.text-line[data-line="1"] {
    color: var(--primary-color);
    animation-delay: 0.3s;
    text-shadow: 
        0 0 10px rgba(0, 247, 255, 0.7),
        0 0 20px rgba(0, 247, 255, 0.5),
        0 0 30px rgba(0, 247, 255, 0.3),
        0 0 40px rgba(0, 247, 255, 0.1);
}

.text-line[data-line="2"] {
    color: var(--secondary-color);
    animation-delay: 0.8s;
    text-shadow: 
        0 0 10px rgba(255, 0, 200, 0.7),
        0 0 20px rgba(255, 0, 200, 0.5),
        0 0 30px rgba(255, 0, 200, 0.3),
        0 0 40px rgba(255, 0, 200, 0.1);
}

.text-line[data-line="3"] {
    color: var(--accent-color);
    animation-delay: 1.3s;
    text-shadow: 
        0 0 10px rgba(255, 234, 0, 0.7),
        0 0 20px rgba(255, 234, 0, 0.5),
        0 0 30px rgba(255, 234, 0, 0.3),
        0 0 40px rgba(255, 234, 0, 0.1);
}

/* 文字悬停效果 */
.text-line:hover {
    transform: translateY(-5px) scale(1.02);
}

.text-line[data-line="1"]:hover {
    text-shadow: 
        0 0 15px rgba(0, 247, 255, 0.9),
        0 0 30px rgba(0, 247, 255, 0.7),
        0 0 50px rgba(0, 247, 255, 0.5),
        0 0 70px rgba(0, 247, 255, 0.3);
}

.text-line[data-line="2"]:hover {
    text-shadow: 
        0 0 15px rgba(255, 0, 200, 0.9),
        0 0 30px rgba(255, 0, 200, 0.7),
        0 0 50px rgba(255, 0, 200, 0.5),
        0 0 70px rgba(255, 0, 200, 0.3);
}

.text-line[data-line="3"]:hover {
    text-shadow: 
        0 0 15px rgba(255, 234, 0, 0.9),
        0 0 30px rgba(255, 234, 0, 0.7),
        0 0 50px rgba(255, 234, 0, 0.5),
        0 0 70px rgba(255, 234, 0, 0.3);
}

/* 文字动画 */
.text-line.animate {
    animation: fadeInUp 1.5s ease forwards;
}

/* 第一行文字特殊效果 */
.text-line[data-line="1"] {
    color: var(--primary-color);
    animation-delay: 0.3s;
}

/* 第二行文字特殊效果 */
.text-line[data-line="2"] {
    color: var(--secondary-color);
    animation-delay: 0.8s;
}

/* 第三行文字特殊效果 */
.text-line[data-line="3"] {
    color: var(--accent-color);
    animation-delay: 1.3s;
}

/* 文字发光效果 */
.text-line::before,
.text-line::after {
    content: attr(data-line);
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    opacity: 0.8;
    z-index: -1;
}

.text-line::before {
    color: var(--primary-color);
    filter: blur(10px);
    transform: translateX(-5px) translateY(5px);
    animation: glitch 3s infinite;
}

.text-line::after {
    color: var(--secondary-color);
    filter: blur(10px);
    transform: translateX(5px) translateY(-5px);
    animation: glitch 2.5s infinite reverse;
}

/* 粒子容器 */
.particles-container {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    z-index: 0;
    overflow: hidden;
}

/* 粒子样式 */
.particle {
    position: absolute;
    background-color: var(--primary-color);
    border-radius: 50%;
    opacity: 0.6;
    filter: blur(2px);
    animation: float linear infinite;
}

/* 动画定义 */
@keyframes fadeInUp {
    0% {
        opacity: 0;
        transform: translateY(50px);
    }
    100% {
        opacity: 1;
        transform: translateY(0);
    }
}

@keyframes glitch {
    0%, 100% {
        transform: translateX(0) translateY(0);
    }
    20% {
        transform: translateX(-3px) translateY(2px);
    }
    40% {
        transform: translateX(3px) translateY(-2px);
    }
    60% {
        transform: translateX(-2px) translateY(3px);
    }
    80% {
        transform: translateX(2px) translateY(-3px);
    }
}

@keyframes float {
    0% {
        transform: translateY(100vh) translateX(0) rotate(0deg);
        opacity: 0;
    }
    10% {
        opacity: 0.6;
    }
    90% {
        opacity: 0.6;
    }
    100% {
        transform: translateY(-100px) translateX(var(--translate-x)) rotate(var(--rotate));
        opacity: 0;
    }
}

/* 星星闪烁动画 */
@keyframes twinkle {
    0%, 100% {
        opacity: 0.2;
        transform: scale(0.8);
    }
    50% {
        opacity: 1;
        transform: scale(1.2);
    }
}

/* 响应式设计 */
@media (max-width: 768px) {
    .text-line {
        font-size: clamp(1.2rem, 7vw, 3rem);
        margin: 0.5rem 0;
        line-height: 1.2;
    }
    
    .text-container {
        padding: 1.5rem;
    }
}

@media (max-width: 480px) {
    .text-container {
        padding: 1rem;
        height: 100vh;
        display: flex;
        flex-direction: column;
        justify-content: center;
    }
    
    .text-line {
        font-size: clamp(1rem, 6vw, 2rem);
        margin: 0.4rem 0;
        letter-spacing: 1px;
        line-height: 1.1;
    }
}

/* 提升性能的样式 */
.text-line {
    will-change: opacity, transform;
}

.particle {
    will-change: transform, opacity;
}